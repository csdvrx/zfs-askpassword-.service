### Use systemd-ask-password as a dependancy ran inbetween the zpool import and the zfs mount, helpful for sd-zfs
## Save as /etc/systemd/system/zfs-askpassword@.service
# do the same for the companion file zfs-remount.service

### Installation:

## Replace the / with -, so your_pool/encryption_root becomes your_pool-encryption_root and run:
# systemctl daemon-reload && systemctl enable zfs-askpassword@escaped-path-to-the-encryption_root && systemctl enable zfs-remount
# systemctl enable "zfs-askpassword@your_pool-your-encryption_root.ser
vice

## Edit /etc/mkinitcpio.conf to have:
# FILES=(... whatever you already have ... /etc/systemd/system/emergen
cy.service /etc/systemd/system/zfs-askpassword.service /usr/lib/system
d/system/systemd-ask-password-console.path /usr/lib/systemd/system/sys
init.target.wants/systemd-ask-password-console.path /usr/lib/systemd/s
ystem/systemd-ask-password-console.service)
# BINARIES=(... whatever you already have .. then add . console.path systemd-ask-password systemd-tty-ask-password-agent)

[Unit]
DefaultDependencies=no
Description=Use systemd-ask-password to zfs load-key
## Delay sysroot.mount until we're done
Before=sysroot.mount
OnSuccess=sysroot.mount
# Ask the password before zfs-mount
Before=zfs-mount.service
# but after zpool import
After=zfs-import-scan.service
Requires=zfs-import-scan.service
# and after the volumes are ready
After=zfs-volume-wait.service
# Use systemd-ask-password
Requires=systemd-ask-password-console.service
After=systemd-ask-password-console.service
# Limit the number of times in case of problems
StartLimitIntervalSec=60
StartLimitBurst=6
OnFailure=emergency.target

[Service]
Type=oneshot
RemainAfterExit=yes
# Give up if the key is already available
ExecCondition=/bin/sh -c 'zfs get -Hp keystatus %I |grep unavailable && echo "Condition passed: key not yet available" && exit 0 || echo "Condition failed: key already available" && exit 2'
# Offer 4 chances to type the right password
ExecStart=+/bin/sh -c 'for i in 1 2 3 4 ; do systemd-ask-password --id %i --no-tty "Encrypted ZFS password for %I" |zfs load-key $( zfs get -Ho value encryptionroot %I) && echo "%p success for %I" && (systemctl restart zfs-mount &) && break ; done && exit 0 || echo "%p failed for %I" && exit -1'

[Install]
RequiredBy=sysroot.mount
# Name your pool here, replacing slashes with hyphens, like for /pool/enc
DefaultInstance=pool-enc
